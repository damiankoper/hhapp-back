{
  "name": "hhapp-back",
  "version": "0.0.0",
  "description": "hhapp-back",
  "license": "MIT",
  "repository": "",
  "author": {
    "name": "",
    "email": "kopernickk@gmail.com",
    "url": "http://example.com"
  },
  "keywords": [
    ""
  ],
  "files": [
    "lib"
  ],
  "main": "lib/index",
  "types": "lib/index",
  "scripts": {
    "clean": "rimraf lib && rimraf coverage",
    "format": "prettier --write \"{src,__tests__}/**/*.ts\" --single-quote --trailing-comma es5",
    "lint": "tslint --force --format verbose \"src/**/*.ts\" --fix",
    "prepublishOnly": "npm run build",
    "prebuild": "npm run clean && npm run format && npm run lint && echo Using TypeScript && tsc --version",
    "build": "tsc",
    "test": "jest --runInBand",
    "coverage": "jest --coverage --runInBand",
    "watch": "npm run build -- --watch --preserveWatchOutput",
    "watch:docker": "npm run watch -- --preserveWatchOutput",
    "watch:test": "jest --watch --runInBand",
    "docker:test": "docker-compose -f .docker/test/docker-compose.yml --project-directory ./ run hhapp-back-test /wait-for -t 60 hhapp-back-test-database:3306 -- npm run coverage; npm run docker:test:down",
    "docker:test:watch": "docker-compose  -f .docker/test/docker-compose.yml --project-directory ./ run hhapp-back-test /wait-for -t 60 hhapp-back-test-database:3306 -- npm run watch:test; npm run docker:test:down",
    "docker:test:build": "docker-compose -f .docker/test/docker-compose.yml --project-directory ./ build",
    "docker:test:down": "docker-compose -f .docker/test/docker-compose.yml --project-directory ./ down -v",
    "docker:dev": "docker-compose -f .docker/dev/docker-compose.yml --project-directory ./ up --build; npm run docker:dev:down",
    "docker:dev:exec": "docker-compose -f .docker/dev/docker-compose.yml --project-directory ./ exec hhapp-back-dev",
    "docker:dev:build": "docker-compose -f .docker/dev/docker-compose.yml --project-directory ./ build",
    "docker:dev:down": "docker-compose -f .docker/dev/docker-compose.yml --project-directory ./ down -v",
    "docker:prod": "docker-compose -f .docker/prod/docker-compose.yml --project-directory ./ up --build"
  },
  "dependencies": {
    "@types/bcryptjs": "^2.4.2",
    "@types/body-parser": "^1.17.0",
    "@types/express": "^4.17.0",
    "@types/jest": "^23.3.3",
    "@types/jsonwebtoken": "^8.3.3",
    "@types/node": "^10.11.4",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.19.0",
    "coveralls": "^3.0.2",
    "express": "^4.17.1",
    "jest": "^23.6.0",
    "jsonwebtoken": "^8.5.1",
    "mysql": "^2.17.1",
    "prettier": "^1.14.3",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^2.7.1",
    "supertest": "^4.0.2",
    "ts-jest": "^23.10.3",
    "tslint": "^5.11.0",
    "tslint-config-prettier": "^1.15.0",
    "typeorm": "^0.2.18",
    "typescript": "^3.1.1"
  },
  "devDependencies": {
    "@types/supertest": "^2.0.8"
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "jest": {
    "preset": "ts-jest"
  }
}